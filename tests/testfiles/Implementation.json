{"1": {"childrenIds": [3, 25], "name": "Main", "parentId": null, "depth": 1, "id": 1}, "3": {"childrenIds": [4, 67], "name": "Goal", "parentId": 1, "depth": 2, "id": 3}, "4": {"childrenIds": [83, 84, 85], "name": "Identify the remaining features  needed to make this this tool usable", "parentId": 3, "depth": 3, "id": 4}, "5": {"childrenIds": [11], "name": "Fix bugs", "parentId": 85, "depth": 5, "id": 5}, "7": {"name": "Easing of creating anumation", "parentId": 83, "depth": 5, "id": 7}, "8": {"name": "Sound FX", "parentId": 83, "depth": 5, "id": 8}, "9": {"name": "Points reward system", "parentId": 83, "depth": 5, "id": 9}, "10": {"name": "Identify the steps to make problem solving fun", "parentId": 83, "depth": 5, "id": 10}, "11": {"childrenIds": [12], "name": "The text is not centered correctly", "parentId": 5, "depth": 6, "id": 11}, "12": {"name": "Fixed", "parentId": 11, "depth": 7, "id": 12}, "15": {"childrenIds": [16, 18], "name": "Refactoring", "parentId": 85, "depth": 5, "id": 15}, "16": {"childrenIds": [17], "name": "Implement node dragging", "parentId": 15, "depth": 6, "id": 16}, "17": {"childrenIds": [19, 20, 21, 22], "name": "It is already implemented before, so just study existing implementation", "parentId": 16, "depth": 7, "id": 17}, "18": {"name": "Implement node edit", "parentId": 15, "depth": 6, "id": 18}, "19": {"name": "Refactor the existing implementation", "parentId": 17, "depth": 8, "id": 19}, "20": {"name": "Have to do it to make development easier", "parentId": 17, "depth": 8, "id": 20}, "21": {"name": "Use the same concept, everything will be managed in the map level", "parentId": 17, "depth": 8, "id": 21}, "22": {"name": "Doesn't have to expose all the methods, still have to hide some implementation", "parentId": 17, "depth": 8, "id": 22}, "25": {"childrenIds": [26, 37], "name": "Code implementation", "parentId": 1, "depth": 2, "id": 25}, "26": {"childrenIds": [27], "name": "Goals", "parentId": 25, "depth": 3, "id": 26}, "27": {"childrenIds": [28], "name": "How to implement setting the map in the State?", "parentId": 26, "depth": 4, "id": 27}, "28": {"childrenIds": [29, 30, 33], "name": "Two settings", "parentId": 27, "depth": 5, "id": 28}, "29": {"name": "Map will be created inside the State", "parentId": 28, "depth": 6, "id": 29}, "30": {"name": "Will be passed as parameter", "parentId": 28, "depth": 6, "id": 30}, "33": {"childrenIds": [34, 35], "name": "Refactor", "parentId": 28, "depth": 6, "id": 33}, "34": {"name": "Have to reduce the option down to one to make it easier", "parentId": 33, "depth": 7, "id": 34}, "35": {"name": "Not a priority", "parentId": 33, "depth": 7, "id": 35}, "37": {"childrenIds": [40, 45, 46, 47], "name": "System class overview", "parentId": 25, "depth": 3, "id": 37}, "40": {"childrenIds": [48], "name": "Main", "parentId": 37, "depth": 4, "id": 40}, "45": {"childrenIds": [49], "name": "Epiphany", "parentId": 37, "depth": 4, "id": 45}, "46": {"childrenIds": [52, 54], "name": "State", "parentId": 37, "depth": 4, "id": 46}, "47": {"childrenIds": [51, 58], "name": "Map", "parentId": 37, "depth": 4, "id": 47}, "48": {"name": "Create an instance of Epiphany", "parentId": 40, "depth": 5, "id": 48}, "49": {"name": "Create instance of State", "parentId": 45, "depth": 5, "id": 49}, "51": {"name": "Manages all the components of the game", "parentId": 47, "depth": 5, "id": 51}, "52": {"name": "Code Implementation", "parentId": 46, "depth": 5, "id": 52}, "54": {"childrenIds": [55, 56, 57], "name": "Overiew", "parentId": 46, "depth": 5, "id": 54}, "55": {"name": "Manages the instance of map", "parentId": 54, "depth": 6, "id": 55}, "56": {"name": "A generic class to manage a different state", "parentId": 54, "depth": 6, "id": 56}, "57": {"name": "Will contain the all function calls of the map", "parentId": 54, "depth": 6, "id": 57}, "58": {"childrenIds": [59, 63], "name": "Components", "parentId": 47, "depth": 5, "id": 58}, "59": {"childrenIds": [61], "name": "NodeManager", "parentId": 58, "depth": 6, "id": 59}, "61": {"childrenIds": [62], "name": "Overview", "parentId": 59, "depth": 7, "id": 61}, "62": {"name": "Manages everything about the node or data", "parentId": 61, "depth": 8, "id": 62}, "63": {"childrenIds": [64], "name": "NodeDrawer", "parentId": 58, "depth": 6, "id": 63}, "64": {"childrenIds": [65, 66], "name": "Overview", "parentId": 63, "depth": 7, "id": 64}, "65": {"name": "Will refactor system later(Non-existing for now)", "parentId": 64, "depth": 8, "id": 65}, "66": {"name": "Manages the drawing of the data", "parentId": 64, "depth": 8, "id": 66}, "67": {"childrenIds": [68], "name": "Identify the ways how to plan better", "parentId": 3, "depth": 3, "id": 67}, "68": {"childrenIds": [69], "name": "Options", "parentId": 67, "depth": 4, "id": 68}, "69": {"childrenIds": [148, 70], "name": "Divide the goal into main categories", "parentId": 68, "depth": 5, "id": 69}, "70": {"childrenIds": [73, 76, 80, 86, 90], "name": "Goal", "parentId": 69, "depth": 6, "id": 70}, "73": {"childrenIds": [75], "name": "Full Description", "parentId": 70, "depth": 7, "id": 73}, "75": {"name": "Break down of description", "parentId": 73, "depth": 8, "id": 75}, "76": {"childrenIds": [77, 78, 79], "name": "Plan of implementation", "parentId": 70, "depth": 7, "id": 76}, "77": {"name": "Draft 1", "parentId": 76, "depth": 8, "id": 77}, "78": {"name": "Draft 2", "parentId": 76, "depth": 8, "id": 78}, "79": {"name": "Execution", "parentId": 76, "depth": 8, "id": 79}, "80": {"childrenIds": [81, 82], "name": "Code implementation", "parentId": 70, "depth": 7, "id": 80}, "81": {"name": "Code structure", "parentId": 80, "depth": 8, "id": 81}, "82": {"name": "Analyze overall structure", "parentId": 80, "depth": 8, "id": 82}, "83": {"childrenIds": [7, 8, 9, 10, 103, 173, 174, 222], "name": "Queue", "parentId": 4, "depth": 4, "id": 83}, "84": {"name": "In Progress", "parentId": 4, "depth": 4, "id": 84}, "85": {"childrenIds": [5, 15, 125, 175, 216, 223], "name": "Implemented", "parentId": 4, "depth": 4, "id": 85}, "86": {"name": "Review (Full Description)", "parentId": 70, "depth": 7, "id": 86}, "90": {"childrenIds": [91], "name": "Always implemented", "parentId": 70, "depth": 7, "id": 90}, "91": {"childrenIds": [94, 101], "name": "Test assumptions", "parentId": 90, "depth": 8, "id": 91}, "94": {"childrenIds": [98], "name": "Always do this to get closer to the goal", "parentId": 91, "depth": 9, "id": 94}, "98": {"name": "Increasing the chance of making assumption a reality", "parentId": 94, "depth": 10, "id": 98}, "101": {"childrenIds": [102], "name": "Return value", "parentId": 91, "depth": 9, "id": 101}, "102": {"name": "Always validate the root goal", "parentId": 101, "depth": 10, "id": 102}, "103": {"childrenIds": [107, 108, 110, 115, 119], "name": "Link Nodes", "parentId": 83, "depth": 5, "id": 103}, "107": {"name": "Solve when linked node is deleted", "parentId": 103, "depth": 6, "id": 107}, "108": {"name": "Solve when node that made the link is deleted", "parentId": 103, "depth": 6, "id": 108}, "110": {"childrenIds": [111, 124], "name": "Plan", "parentId": 103, "depth": 6, "id": 110}, "111": {"childrenIds": [112, 113], "name": "Save the ID to the referencer", "parentId": 110, "depth": 7, "id": 111}, "112": {"childrenIds": [114], "name": "Pros:", "parentId": 111, "depth": 8, "id": 112}, "113": {"name": "Cons", "parentId": 111, "depth": 8, "id": 113}, "114": {"name": "If the referencee is deleted, we just have to update the referencer", "parentId": 112, "depth": 9, "id": 114}, "115": {"childrenIds": [116, 117], "name": "Solvability: 7", "parentId": 103, "depth": 6, "id": 115}, "116": {"name": "Solvable, but there are lots of things I don't know", "parentId": 115, "depth": 7, "id": 116}, "117": {"name": "Have to delve into it", "parentId": 115, "depth": 7, "id": 117}, "119": {"childrenIds": [120, 121], "name": "Implementation", "parentId": 103, "depth": 6, "id": 119}, "120": {"name": "Showing an abbrev name of node", "parentId": 119, "depth": 7, "id": 120}, "121": {"name": "When clicked, it will go to the referencee", "parentId": 119, "depth": 7, "id": 121}, "122": {"name": "Referencee: The one that is being referenced", "parentId": 124, "depth": 8, "id": 122}, "123": {"name": "Referencer: The one that references", "parentId": 124, "depth": 8, "id": 123}, "124": {"childrenIds": [122, 123], "name": "Glossary", "parentId": 110, "depth": 7, "id": 124}, "125": {"childrenIds": [127, 129, 131, 138], "name": "Implement focusing on the area where changes is made", "parentId": 85, "depth": 5, "id": 125}, "127": {"childrenIds": [135, 136], "name": "Events", "parentId": 125, "depth": 6, "id": 127}, "129": {"childrenIds": [133], "name": "Pros", "parentId": 125, "depth": 6, "id": 129}, "131": {"childrenIds": [132], "name": "Cons", "parentId": 125, "depth": 6, "id": 131}, "132": {"name": "Time", "parentId": 131, "depth": 7, "id": 132}, "133": {"name": "Reducing mental power to solve problem", "parentId": 129, "depth": 7, "id": 133}, "135": {"name": "When created a new node", "parentId": 127, "depth": 7, "id": 135}, "136": {"childrenIds": [137], "name": "When deleted a new node", "parentId": 127, "depth": 7, "id": 136}, "137": {"name": "Focus on the parent node", "parentId": 136, "depth": 8, "id": 137}, "138": {"childrenIds": [139, 145], "name": "Implementation", "parentId": 125, "depth": 6, "id": 138}, "139": {"childrenIds": [140, 157], "name": "Options", "parentId": 138, "depth": 7, "id": 139}, "140": {"childrenIds": [141, 142], "name": "Centering the created node", "parentId": 139, "depth": 8, "id": 140}, "141": {"childrenIds": [143], "name": "Pros", "parentId": 140, "depth": 9, "id": 141}, "142": {"childrenIds": [144], "name": "Cons", "parentId": 140, "depth": 9, "id": 142}, "143": {"name": "Be at focus on the node", "parentId": 141, "depth": 10, "id": 143}, "144": {"name": "We might be considering other things, just like now", "parentId": 142, "depth": 10, "id": 144}, "145": {"childrenIds": [168], "name": "Try to get feedback instantly", "parentId": 138, "depth": 7, "id": 145}, "148": {"childrenIds": [149, 150, 151], "name": "Mindset", "parentId": 69, "depth": 6, "id": 148}, "149": {"name": "All things might change", "parentId": 148, "depth": 7, "id": 149}, "150": {"name": "Change chance is higher relative to the depth of ideas from the root", "parentId": 148, "depth": 7, "id": 150}, "151": {"childrenIds": [152, 153], "name": "Reprogramming mind doesn't have to be boring", "parentId": 148, "depth": 7, "id": 151}, "152": {"name": "Therefore find a way to make it fun", "parentId": 151, "depth": 8, "id": 152}, "153": {"childrenIds": [154, 155], "name": "What makes it boring?", "parentId": 151, "depth": 8, "id": 153}, "154": {"name": "Not feeling the progress", "parentId": 153, "depth": 9, "id": 154}, "155": {"name": "Offer a solutions later on...", "parentId": 153, "depth": 9, "id": 155}, "157": {"childrenIds": [158], "name": "Just try to maintain the current position", "parentId": 139, "depth": 8, "id": 157}, "158": {"childrenIds": [159, 162, 164], "name": "Know if the camera is changing position when redrawing", "parentId": 157, "depth": 9, "id": 158}, "159": {"childrenIds": [160, 161], "name": "Possible", "parentId": 158, "depth": 10, "id": 159}, "160": {"name": "Because the map is always recreated when loading data", "parentId": 159, "depth": 11, "id": 160}, "161": {"name": "Therefore the camera is reinitialized and position as well", "parentId": 159, "depth": 11, "id": 161}, "162": {"childrenIds": [163], "name": "If true", "parentId": 158, "depth": 10, "id": 162}, "163": {"childrenIds": [166], "name": "Save the position and zoom level somewhere", "parentId": 162, "depth": 11, "id": 163}, "164": {"childrenIds": [165], "name": "Else", "parentId": 158, "depth": 10, "id": 164}, "165": {"name": "Find another way", "parentId": 164, "depth": 11, "id": 165}, "166": {"childrenIds": [167], "name": "Just save it in the stateData for now", "parentId": 163, "depth": 12, "id": 166}, "167": {"name": "Have to create a json to save preference", "parentId": 166, "depth": 13, "id": 167}, "168": {"childrenIds": [169, 170, 171, 172], "name": "(Just try to maintain..)", "parentId": 145, "depth": 8, "id": 168}, "169": {"name": "Get the camera position", "parentId": 168, "depth": 9, "id": 169}, "170": {"name": "Save it somewhere", "parentId": 168, "depth": 9, "id": 170}, "171": {"name": "Load it when all data are all drawn", "parentId": 168, "depth": 9, "id": 171}, "172": {"name": "Analyze from there", "parentId": 168, "depth": 9, "id": 172}, "173": {"name": "Undo", "parentId": 83, "depth": 5, "id": 173}, "174": {"name": "Redo", "parentId": 83, "depth": 5, "id": 174}, "175": {"childrenIds": [177, 181, 187], "name": "Implement hiding parent and ancestors", "parentId": 85, "depth": 5, "id": 175}, "177": {"childrenIds": [178, 182], "name": "Create function in the NodeManager", "parentId": 175, "depth": 6, "id": 177}, "178": {"childrenIds": [179, 180], "name": "Will delete", "parentId": 177, "depth": 7, "id": 178}, "179": {"name": "Grandparent", "parentId": 178, "depth": 8, "id": 179}, "180": {"name": "Ancestors", "parentId": 178, "depth": 8, "id": 180}, "181": {"name": "Redraw the filtered data", "parentId": 175, "depth": 6, "id": 181}, "182": {"childrenIds": [183], "name": "Possible conflicts", "parentId": 177, "depth": 7, "id": 182}, "183": {"childrenIds": [184, 185, 186], "name": "To the existing fold node for children", "parentId": 182, "depth": 8, "id": 183}, "184": {"name": "Solve the color coding  if the state is folded children", "parentId": 183, "depth": 9, "id": 184}, "185": {"name": "Red if just folded the parents and ancestors", "parentId": 183, "depth": 9, "id": 185}, "186": {"name": "Yellow if both folded children and folded ancestors", "parentId": 183, "depth": 9, "id": 186}, "187": {"childrenIds": [188, 203, 212], "name": "Implementation", "parentId": 175, "depth": 6, "id": 187}, "188": {"childrenIds": [189, 193, 190, 191, 195], "name": "V1", "parentId": 187, "depth": 7, "id": 188}, "189": {"name": "Recursion", "parentId": 188, "depth": 8, "id": 189}, "190": {"name": "Always delete data by ID from the copy of allData", "parentId": 188, "depth": 8, "id": 190}, "191": {"name": "If parent is detected", "parentId": 188, "depth": 8, "id": 191}, "193": {"name": "Will return a filtered data", "parentId": 188, "depth": 8, "id": 193}, "195": {"childrenIds": [197, 200], "name": "Conflicts with folded children", "parentId": 188, "depth": 8, "id": 195}, "197": {"childrenIds": [198], "name": "Give the starting point", "parentId": 195, "depth": 9, "id": 197}, "198": {"childrenIds": [199], "name": "The last data with folded ancestor will be saved", "parentId": 197, "depth": 10, "id": 198}, "199": {"name": "So that when the data is loaded, it will load the correct data", "parentId": 198, "depth": 11, "id": 199}, "200": {"childrenIds": [201, 202], "name": "Position of the camera", "parentId": 195, "depth": 9, "id": 200}, "201": {"name": "It has to get the position of the selected data", "parentId": 200, "depth": 10, "id": 201}, "202": {"name": "Relative to the camera", "parentId": 200, "depth": 10, "id": 202}, "203": {"childrenIds": [204, 205, 206], "name": "V2", "parentId": 187, "depth": 7, "id": 203}, "204": {"childrenIds": [209], "name": "Return filtered data", "parentId": 203, "depth": 8, "id": 204}, "205": {"name": "Starting point will be the selected data", "parentId": 203, "depth": 8, "id": 205}, "206": {"name": "See (Conflicts with folded children)", "parentId": 203, "depth": 8, "id": 206}, "209": {"childrenIds": [210], "name": "Code", "parentId": 204, "depth": 9, "id": 209}, "210": {"name": "removeAncestor()", "parentId": 209, "depth": 10, "id": 210}, "212": {"childrenIds": [213], "name": "V3", "parentId": 187, "depth": 7, "id": 212}, "213": {"childrenIds": [214, 215], "name": "Is arranging the filtered node by ID will work?", "parentId": 212, "depth": 8, "id": 213}, "214": {"name": "The tendency is that the lower ID assigned will be on the top of the tree", "parentId": 213, "depth": 9, "id": 214}, "215": {"name": "The indicator that is it the starting data is that it doesn't have a parent", "parentId": 213, "depth": 9, "id": 215}, "216": {"parentId": 85, "id": 216, "childrenIds": [224, 225], "depth": 5, "name": "Make save hotkey Ctrl + S"}, "222": {"name": "Make create sibling hotkey Enter key", "parentId": 83, "depth": 5, "id": 222}, "223": {"name": "Make create child Tab key", "parentId": 85, "depth": 5, "id": 223}, "224": {"name": "V1", "parentId": 216, "depth": 6, "id": 224}, "225": {"name": "Change f1 key to Ctrl + S", "parentId": 216, "depth": 6, "id": 225}}