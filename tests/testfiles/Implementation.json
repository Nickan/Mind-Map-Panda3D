{"1": {"id": 1, "childrenIds": [3, 25], "parentId": null, "name": "Main", "depth": 1}, "3": {"id": 3, "childrenIds": [4, 67], "parentId": 1, "name": "Goal", "depth": 2}, "4": {"id": 4, "childrenIds": [83, 84, 85], "parentId": 3, "name": "Identify the remaining features  needed to make this this tool usable", "depth": 3}, "5": {"id": 5, "childrenIds": [11], "parentId": 85, "name": "Fix bugs", "depth": 5}, "7": {"id": 7, "parentId": 83, "name": "Easing of creating anumation", "depth": 5}, "8": {"id": 8, "parentId": 83, "name": "Sound FX", "depth": 5}, "9": {"id": 9, "parentId": 83, "name": "Points reward system", "depth": 5}, "10": {"id": 10, "parentId": 83, "name": "Identify the steps to make problem solving fun", "depth": 5}, "11": {"id": 11, "childrenIds": [12], "parentId": 5, "name": "The text is not centered correctly", "depth": 6}, "12": {"id": 12, "parentId": 11, "name": "Fixed", "depth": 7}, "15": {"id": 15, "childrenIds": [16, 18], "parentId": 85, "name": "Refactoring", "depth": 5}, "16": {"id": 16, "childrenIds": [17], "parentId": 15, "name": "Implement node dragging", "depth": 6}, "17": {"id": 17, "childrenIds": [19, 20, 21, 22], "parentId": 16, "name": "It is already implemented before, so just study existing implementation", "depth": 7}, "18": {"id": 18, "parentId": 15, "name": "Implement node edit", "depth": 6}, "19": {"id": 19, "parentId": 17, "name": "Refactor the existing implementation", "depth": 8}, "20": {"id": 20, "parentId": 17, "name": "Have to do it to make development easier", "depth": 8}, "21": {"id": 21, "parentId": 17, "name": "Use the same concept, everything will be managed in the map level", "depth": 8}, "22": {"id": 22, "parentId": 17, "name": "Doesn't have to expose all the methods, still have to hide some implementation", "depth": 8}, "25": {"id": 25, "childrenIds": [26, 37], "parentId": 1, "name": "Code implementation", "depth": 2}, "26": {"id": 26, "childrenIds": [27], "parentId": 25, "name": "Goals", "depth": 3}, "27": {"id": 27, "childrenIds": [28], "parentId": 26, "name": "How to implement setting the map in the State?", "depth": 4}, "28": {"id": 28, "childrenIds": [29, 30, 33], "parentId": 27, "name": "Two settings", "depth": 5}, "29": {"id": 29, "parentId": 28, "name": "Map will be created inside the State", "depth": 6}, "30": {"id": 30, "parentId": 28, "name": "Will be passed as parameter", "depth": 6}, "33": {"id": 33, "childrenIds": [34, 35], "parentId": 28, "name": "Refactor", "depth": 6}, "34": {"id": 34, "parentId": 33, "name": "Have to reduce the option down to one to make it easier", "depth": 7}, "35": {"id": 35, "parentId": 33, "name": "Not a priority", "depth": 7}, "37": {"id": 37, "childrenIds": [40, 45, 46, 47], "parentId": 25, "name": "System class overview", "depth": 3}, "40": {"id": 40, "childrenIds": [48], "parentId": 37, "name": "Main", "depth": 4}, "45": {"id": 45, "childrenIds": [49], "parentId": 37, "name": "Epiphany", "depth": 4}, "46": {"id": 46, "childrenIds": [52, 54], "parentId": 37, "name": "State", "depth": 4}, "47": {"id": 47, "childrenIds": [51, 58], "parentId": 37, "name": "Map", "depth": 4}, "48": {"id": 48, "parentId": 40, "name": "Create an instance of Epiphany", "depth": 5}, "49": {"id": 49, "parentId": 45, "name": "Create instance of State", "depth": 5}, "51": {"id": 51, "parentId": 47, "name": "Manages all the components of the game", "depth": 5}, "52": {"id": 52, "parentId": 46, "name": "Code Implementation", "depth": 5}, "54": {"id": 54, "childrenIds": [55, 56, 57], "parentId": 46, "name": "Overiew", "depth": 5}, "55": {"id": 55, "parentId": 54, "name": "Manages the instance of map", "depth": 6}, "56": {"id": 56, "parentId": 54, "name": "A generic class to manage a different state", "depth": 6}, "57": {"id": 57, "parentId": 54, "name": "Will contain the all function calls of the map", "depth": 6}, "58": {"id": 58, "childrenIds": [59, 63], "parentId": 47, "name": "Components", "depth": 5}, "59": {"id": 59, "childrenIds": [61], "parentId": 58, "name": "NodeManager", "depth": 6}, "61": {"id": 61, "childrenIds": [62], "parentId": 59, "name": "Overview", "depth": 7}, "62": {"id": 62, "parentId": 61, "name": "Manages everything about the node or data", "depth": 8}, "63": {"id": 63, "childrenIds": [64], "parentId": 58, "name": "NodeDrawer", "depth": 6}, "64": {"id": 64, "childrenIds": [65, 66], "parentId": 63, "name": "Overview", "depth": 7}, "65": {"id": 65, "parentId": 64, "name": "Will refactor system later(Non-existing for now)", "depth": 8}, "66": {"id": 66, "parentId": 64, "name": "Manages the drawing of the data", "depth": 8}, "67": {"id": 67, "childrenIds": [68], "parentId": 3, "name": "Identify the ways how to plan better", "depth": 3}, "68": {"id": 68, "childrenIds": [69], "parentId": 67, "name": "Options", "depth": 4}, "69": {"id": 69, "childrenIds": [148, 70], "parentId": 68, "name": "Divide the goal into main categories", "depth": 5}, "70": {"id": 70, "childrenIds": [73, 76, 80, 86, 90], "parentId": 69, "name": "Goal", "depth": 6}, "73": {"id": 73, "childrenIds": [75], "parentId": 70, "name": "Full Description", "depth": 7}, "75": {"id": 75, "parentId": 73, "name": "Break down of description", "depth": 8}, "76": {"id": 76, "childrenIds": [77, 78, 79], "parentId": 70, "name": "Plan of implementation", "depth": 7}, "77": {"id": 77, "parentId": 76, "name": "Draft 1", "depth": 8}, "78": {"id": 78, "parentId": 76, "name": "Draft 2", "depth": 8}, "79": {"id": 79, "parentId": 76, "name": "Execution", "depth": 8}, "80": {"id": 80, "childrenIds": [81, 82], "parentId": 70, "name": "Code implementation", "depth": 7}, "81": {"id": 81, "parentId": 80, "name": "Code structure", "depth": 8}, "82": {"id": 82, "parentId": 80, "name": "Analyze overall structure", "depth": 8}, "83": {"id": 83, "childrenIds": [7, 8, 9, 10, 103, 173, 174], "parentId": 4, "name": "Queue", "depth": 4}, "84": {"id": 84, "childrenIds": [175], "parentId": 4, "name": "In Progress", "depth": 4}, "85": {"id": 85, "childrenIds": [5, 15, 125], "parentId": 4, "name": "Implemented", "depth": 4}, "86": {"id": 86, "parentId": 70, "name": "Review (Full Description)", "depth": 7}, "90": {"id": 90, "childrenIds": [91], "parentId": 70, "name": "Always implemented", "depth": 7}, "91": {"id": 91, "childrenIds": [94, 101], "parentId": 90, "name": "Test assumptions", "depth": 8}, "94": {"id": 94, "childrenIds": [98], "parentId": 91, "name": "Always do this to get closer to the goal", "depth": 9}, "98": {"id": 98, "parentId": 94, "name": "Increasing the chance of making assumption a reality", "depth": 10}, "101": {"id": 101, "childrenIds": [102], "parentId": 91, "name": "Return value", "depth": 9}, "102": {"id": 102, "parentId": 101, "name": "Always validate the root goal", "depth": 10}, "103": {"id": 103, "childrenIds": [107, 108, 110, 115, 119], "parentId": 83, "name": "Link Nodes", "depth": 5}, "107": {"id": 107, "parentId": 103, "name": "Solve when linked node is deleted", "depth": 6}, "108": {"id": 108, "parentId": 103, "name": "Solve when node that made the link is deleted", "depth": 6}, "110": {"id": 110, "childrenIds": [111, 124], "parentId": 103, "name": "Plan", "depth": 6}, "111": {"id": 111, "childrenIds": [112, 113], "parentId": 110, "name": "Save the ID to the referencer", "depth": 7}, "112": {"id": 112, "childrenIds": [114], "parentId": 111, "name": "Pros:", "depth": 8}, "113": {"id": 113, "parentId": 111, "name": "Cons", "depth": 8}, "114": {"id": 114, "parentId": 112, "name": "If the referencee is deleted, we just have to update the referencer", "depth": 9}, "115": {"id": 115, "childrenIds": [116, 117], "parentId": 103, "name": "Solvability: 7", "depth": 6}, "116": {"id": 116, "parentId": 115, "name": "Solvable, but there are lots of things I don't know", "depth": 7}, "117": {"id": 117, "parentId": 115, "name": "Have to delve into it", "depth": 7}, "119": {"id": 119, "childrenIds": [120, 121], "parentId": 103, "name": "Implementation", "depth": 6}, "120": {"id": 120, "parentId": 119, "name": "Showing an abbrev name of node", "depth": 7}, "121": {"id": 121, "parentId": 119, "name": "When clicked, it will go to the referencee", "depth": 7}, "122": {"id": 122, "parentId": 124, "name": "Referencee: The one that is being referenced", "depth": 8}, "123": {"id": 123, "parentId": 124, "name": "Referencer: The one that references", "depth": 8}, "124": {"id": 124, "childrenIds": [122, 123], "parentId": 110, "name": "Glossary", "depth": 7}, "125": {"id": 125, "childrenIds": [127, 129, 131, 138], "parentId": 85, "name": "Implement focusing on the area where changes is made", "depth": 5}, "127": {"id": 127, "childrenIds": [135, 136], "parentId": 125, "name": "Events", "depth": 6}, "129": {"id": 129, "childrenIds": [133], "parentId": 125, "name": "Pros", "depth": 6}, "131": {"id": 131, "childrenIds": [132], "parentId": 125, "name": "Cons", "depth": 6}, "132": {"id": 132, "parentId": 131, "name": "Time", "depth": 7}, "133": {"id": 133, "parentId": 129, "name": "Reducing mental power to solve problem", "depth": 7}, "135": {"id": 135, "parentId": 127, "name": "When created a new node", "depth": 7}, "136": {"id": 136, "childrenIds": [137], "parentId": 127, "name": "When deleted a new node", "depth": 7}, "137": {"id": 137, "parentId": 136, "name": "Focus on the parent node", "depth": 8}, "138": {"id": 138, "childrenIds": [139, 145], "parentId": 125, "name": "Implementation", "depth": 6}, "139": {"id": 139, "childrenIds": [140, 157], "parentId": 138, "name": "Options", "depth": 7}, "140": {"id": 140, "childrenIds": [141, 142], "parentId": 139, "name": "Centering the created node", "depth": 8}, "141": {"id": 141, "childrenIds": [143], "parentId": 140, "name": "Pros", "depth": 9}, "142": {"id": 142, "childrenIds": [144], "parentId": 140, "name": "Cons", "depth": 9}, "143": {"id": 143, "parentId": 141, "name": "Be at focus on the node", "depth": 10}, "144": {"id": 144, "parentId": 142, "name": "We might be considering other things, just like now", "depth": 10}, "145": {"id": 145, "childrenIds": [168], "parentId": 138, "name": "Try to get feedback instantly", "depth": 7}, "148": {"id": 148, "childrenIds": [149, 150, 151], "parentId": 69, "name": "Mindset", "depth": 6}, "149": {"id": 149, "parentId": 148, "name": "All things might change", "depth": 7}, "150": {"id": 150, "parentId": 148, "name": "Change chance is higher relative to the depth of ideas from the root", "depth": 7}, "151": {"id": 151, "childrenIds": [152, 153], "parentId": 148, "name": "Reprogramming mind doesn't have to be boring", "depth": 7}, "152": {"id": 152, "parentId": 151, "name": "Therefore find a way to make it fun", "depth": 8}, "153": {"id": 153, "childrenIds": [154, 155], "parentId": 151, "name": "What makes it boring?", "depth": 8}, "154": {"id": 154, "parentId": 153, "name": "Not feeling the progress", "depth": 9}, "155": {"id": 155, "parentId": 153, "name": "Offer a solutions later on...", "depth": 9}, "157": {"id": 157, "childrenIds": [158], "parentId": 139, "name": "Just try to maintain the current position", "depth": 8}, "158": {"id": 158, "childrenIds": [159, 162, 164], "parentId": 157, "name": "Know if the camera is changing position when redrawing", "depth": 9}, "159": {"id": 159, "childrenIds": [160, 161], "parentId": 158, "name": "Possible", "depth": 10}, "160": {"id": 160, "parentId": 159, "name": "Because the map is always recreated when loading data", "depth": 11}, "161": {"id": 161, "parentId": 159, "name": "Therefore the camera is reinitialized and position as well", "depth": 11}, "162": {"id": 162, "childrenIds": [163], "parentId": 158, "name": "If true", "depth": 10}, "163": {"id": 163, "childrenIds": [166], "parentId": 162, "name": "Save the position and zoom level somewhere", "depth": 11}, "164": {"id": 164, "childrenIds": [165], "parentId": 158, "name": "Else", "depth": 10}, "165": {"id": 165, "parentId": 164, "name": "Find another way", "depth": 11}, "166": {"id": 166, "childrenIds": [167], "parentId": 163, "name": "Just save it in the stateData for now", "depth": 12}, "167": {"id": 167, "parentId": 166, "name": "Have to create a json to save preference", "depth": 13}, "168": {"id": 168, "childrenIds": [169, 170, 171, 172], "parentId": 145, "name": "(Just try to maintain..)", "depth": 8}, "169": {"id": 169, "parentId": 168, "name": "Get the camera position", "depth": 9}, "170": {"id": 170, "parentId": 168, "name": "Save it somewhere", "depth": 9}, "171": {"id": 171, "parentId": 168, "name": "Load it when all data are all drawn", "depth": 9}, "172": {"id": 172, "parentId": 168, "name": "Analyze from there", "depth": 9}, "173": {"id": 173, "parentId": 83, "name": "Undo", "depth": 5}, "174": {"id": 174, "parentId": 83, "name": "Redo", "depth": 5}, "175": {"id": 175, "childrenIds": [177, 181, 187], "parentId": 84, "name": "Implement hiding parent and ancestors", "depth": 5}, "177": {"id": 177, "childrenIds": [178, 182], "parentId": 175, "name": "Create function in the NodeManager", "depth": 6}, "178": {"id": 178, "childrenIds": [179, 180], "parentId": 177, "name": "Will delete", "depth": 7}, "179": {"id": 179, "parentId": 178, "name": "Grandparent", "depth": 8}, "180": {"id": 180, "parentId": 178, "name": "Ancestors", "depth": 8}, "181": {"id": 181, "parentId": 175, "name": "Redraw the filtered data", "depth": 6}, "182": {"id": 182, "childrenIds": [183], "parentId": 177, "name": "Possible conflicts", "depth": 7}, "183": {"id": 183, "childrenIds": [184, 185, 186], "parentId": 182, "name": "To the existing fold node for children", "depth": 8}, "184": {"id": 184, "parentId": 183, "name": "Solve the color coding  if the state is folded children", "depth": 9}, "185": {"id": 185, "parentId": 183, "name": "Red if just folded the parents and ancestors", "depth": 9}, "186": {"id": 186, "parentId": 183, "name": "Yellow if both folded children and folded ancestors", "depth": 9}, "187": {"id": 187, "childrenIds": [188, 203, 212], "parentId": 175, "name": "Implementation", "depth": 6}, "188": {"id": 188, "childrenIds": [189, 193, 190, 191, 195], "parentId": 187, "name": "V1", "depth": 7}, "189": {"id": 189, "parentId": 188, "name": "Recursion", "depth": 8}, "190": {"id": 190, "parentId": 188, "name": "Always delete data by ID from the copy of allData", "depth": 8}, "191": {"id": 191, "parentId": 188, "name": "If parent is detected", "depth": 8}, "193": {"id": 193, "parentId": 188, "name": "Will return a filtered data", "depth": 8}, "195": {"id": 195, "childrenIds": [197, 200], "parentId": 188, "name": "Conflicts with folded children", "depth": 8}, "197": {"id": 197, "childrenIds": [198], "parentId": 195, "name": "Give the starting point", "depth": 9}, "198": {"id": 198, "childrenIds": [199], "parentId": 197, "name": "The last data with folded ancestor will be saved", "depth": 10}, "199": {"id": 199, "parentId": 198, "name": "So that when the data is loaded, it will load the correct data", "depth": 11}, "200": {"id": 200, "childrenIds": [201, 202], "parentId": 195, "name": "Position of the camera", "depth": 9}, "201": {"id": 201, "parentId": 200, "name": "It has to get the position of the selected data", "depth": 10}, "202": {"id": 202, "parentId": 200, "name": "Relative to the camera", "depth": 10}, "203": {"id": 203, "childrenIds": [204, 205, 206], "parentId": 187, "name": "V2", "depth": 7}, "204": {"id": 204, "childrenIds": [209], "parentId": 203, "name": "Return filtered data", "depth": 8}, "205": {"id": 205, "parentId": 203, "name": "Starting point will be the selected data", "depth": 8}, "206": {"id": 206, "parentId": 203, "name": "See (Conflicts with folded children)", "depth": 8}, "209": {"id": 209, "childrenIds": [210], "parentId": 204, "name": "Code", "depth": 9}, "210": {"id": 210, "parentId": 209, "name": "removeAncestor()", "depth": 10}, "212": {"id": 212, "childrenIds": [213], "parentId": 187, "name": "V3", "depth": 7}, "213": {"id": 213, "childrenIds": [214, 215], "parentId": 212, "name": "Is arranging the filtered node by ID will work?", "depth": 8}, "214": {"id": 214, "parentId": 213, "name": "The tendency is that the lower ID assigned will be on the top of the tree", "depth": 9}, "215": {"id": 215, "parentId": 213, "name": "The indicator that is it the starting data is that it doesn't have a parent", "depth": 9}}